 const char manifest_json[] PROGMEM = R"rawliteral(
{
  "index.css": {
    "file": "someshit/index-css.css",
    "src": "index.css"
  },
  "index.html": {
    "css": [
      "someshit/index-css.css"
    ],
    "file": "someshit/index-js.js",
    "isEntry": true,
    "src": "index.html"
  }
}
)rawliteral";

 const char btr2refrshlvlJs[] PROGMEM = R"rawliteral(
let batteryIsCharging = false;
function refreshLevel(elemNumber, level, value) {
    document.querySelector("#batteryCell"+elemNumber+" > div > div.acid-container > div > div").style.height = (level * document.querySelector("#batteryCell"+elemNumber+" > div").clientHeight) + "px";
    document.querySelector("#batteryCell"+elemNumber+" > div > div.acid-container > div > div").style.setProperty("--acid-height", (level * document.querySelector("#batteryCell0 > div").clientHeight) + "px");
    document.querySelector("#batteryCell"+elemNumber+" > div > div.percentage > span").innerText = value.toFixed(3);
}
  )rawliteral";

//  const char onNetMessage[] PROGMEM = R"rawliteral(
// const onNetMessage=e=>{const t=e.data;if("SCN"===t.slice(0,3)){let e=t.slice(3);document.getElementById("scanStations").innerText="",console.log(JSON.parse(e));let n=JSON.parse(e);for(let e=0;e<n.length;e++){let t=document.createElement("div");t.setAttribute("label",n[e].ssid);let l=document.createElement("span");n[e].hidden?l.innerText="*(hidden)*":l.innerText=n[e].ssid,l.classList.add("ssid"),t.appendChild(l);let a=document.createElement("div");a.classList.add("params");let s=document.createElement("span");s.innerText=n[e].rssi+"dBm",a.appendChild(s);let d=document.createElement("span");d.innerText="ch:"+n[e].channel,a.appendChild(d);let c=document.createElement("span"),r="";switch(n[e].secure){case 2:r="TKIP";break;case 4:r="CCMP";break;case 5:r="WEP";break;case 7:r="NONE";break;case 8:r="AUTO";break;default:r="NO INFO"}c.innerText=r,a.appendChild(c),document.getElementById("scanStations").appendChild(t);let i=document.createElement("span");i.innerText=n[e].bssid,a.appendChild(i),t.appendChild(a),t.onclick=(e=>{let t=e.target.parentElement.parentElement.getAttribute("label");t&&null!=t||(t=e.target.parentElement.getAttribute("label")),t&&null!=t||(t=e.target.getAttribute("label")),document.querySelector("#ssidInput").value=t,document.querySelector("#ssidPassword").focus(),console.log(t)})}}else console.log(t)};
//   )rawliteral";

 const char onBTRMessage[] PROGMEM = R"rawliteral(
const onBTRMessage=e=>{const t=e.data;if("BAT"===t.slice(0,3)){const e=t.slice(3),r=JSON.parse(e);if(batteryObj=r[0],console.log(batteryObj),batteryObj.cellsVoltage){let e=0;batteryObj.cellsVoltage.forEach((t,r)=>{let c=t-3;refreshLevel(r,c/1.15,t),e+=t}),console.log(e.toFixed(3));const t=document.btrSt;t.cellSum.value.innerHTML=e.toFixed(3),t.balanceCap.value.innerHTML=batteryObj.BalanceCapacity+" Ah",t.rateCap.value.innerHTML=batteryObj.RateCapacity+" Ah",t.divVoltage.value.innerHTML=batteryObj.voltage+" Volts",t.divCurrent.value.innerHTML=batteryObj.current+" Ampers",t.divVoltDiff.value.innerHTML=(Math.max.apply(null,batteryObj.cellsVoltage)-Math.min.apply(null,batteryObj.cellsVoltage)).toFixed(3)+" v",document.querySelector("#chrgMosfetValue").checked=batteryObj.chargeMosfet,document.querySelector("#dsChrgMosfetValue").checked=batteryObj.dischargeMosfet,t.stateChrg.value.innerHTML=batteryObj.stateOfCharge,document.querySelector("body > div.content > div > div.ntcsStats").childNodes.forEach((e,t)=>{e.innerHTML=batteryObj.ntcs[t]+"&#176;C"})}let c=new Date(parseInt(batteryObj.currentTime+"000")),a=c.getHours();a<10&&(a="0"+a);let l=c.getMinutes();l<10&&(l="0"+l);let o=c.getSeconds();o<10&&(o="0"+o);const n=document.btrSt;n.currentTime.value.innerHTML=`${a}:${l}:${o}`,batteryObj.current>0?(document.querySelector("h1").innerHTML="CHARGING!!!",document.querySelectorAll(".acid-container > .acid").forEach(e=>{e.style.filter="hue-rotate(222deg)",document.querySelector("h1").classList.add("charging"),document.querySelector("h1").classList.remove("discharging")})):batteryObj.current<0?(document.querySelector("h1").innerHTML="DISCHARGING!!!",document.querySelectorAll(".acid-container > .acid").forEach(e=>{e.style.filter="hue-rotate(0deg)",document.querySelector("h1").classList.remove("charging"),document.querySelector("h1").classList.add("discharging")})):(document.querySelector("h1").classList.remove("discharging"),document.querySelector("h1").classList.remove("charging"),document.querySelector("h1").innerHTML="..idle",document.querySelectorAll(".acid-container > .acid").forEach(e=>{e.style.filter="hue-rotate(120deg)"}))}else console.log(t)};
)rawliteral";
//  const char onIPMessage[] PROGMEM = R"rawliteral(
// const onIPMessage=e=>{const s=e.data;if(console.log("IP Messages================================================"),"IP"===s.slice(0,2)){let e=s.split("--:")[1];console.log(e.split("-:"));let o=e.split("-:");for(const e of o){console.log(e.split(":-"));let s=e.split(":-")[0],o=e.split(":-")[1];switch(s){case"softap":document.querySelector("#softIP").innerHTML=o;break;case"local":document.querySelector("#pubIP").innerHTML=o;break;case"ssid":document.querySelector("#netName").innerHTML=o}}}else if("BAT"===s.slice(0,3)){console.log("BAT");let e=s.split('current":')[1],o=e.split(",")[0],l=JSON.parse(o);console.log(l),l>.2?document.querySelector("h1").classList.add("charging"):l<0?document.querySelector("h1").classList.add("discharging"):0==l&&(document.querySelector("h1").classList.remove("charging"),document.querySelector("h1").classList.remove("discharging"))}else console.log(s)};
//   )rawliteral";

   const char initBatteryArray[] PROGMEM = R"rawliteral(
function initBatteryArray(e){const a=document.btrSt=document.querySelector("body > div.content > div > div.batteryStats");a.innerHTML="",document.querySelector("#batteryArray").innerHTML="",document.querySelector(".ntcsStats").innerHTML="";let t='\n    <div class="battery">\n    <div class="acid-container">\n      <div class="acid">\n        <div class="level" class="fill"></div>\n        <svg class="waves"\n             xmlns="http://www.w3.org/2000/svg"\n             xmlns:xlink="http://www.w3.org/1999/xlink"\n             viewBox="0 24 150 28"\n             preserveAspectRatio="none">\n          <defs>\n            <path id="gentle-wave"\n                  d="M-160 44c30 0 \n                     58-18 88-18s\n                     58 18 88 18 \n                     58-18 88-18 \n                     58 18 88 18\n                     v44h-352z" />\n          </defs>\n          <g class="parallax">\n            <use xlink:href="#gentle-wave" x="50" y="0" fill="#000"/>\n            <use xlink:href="#gentle-wave" x="50" y="3" fill="#fff"/>\n            <use xlink:href="#gentle-wave" x="50" y="6" fill="#0ff"/>  \n          </g>\n        </svg>\n      </div>\n    </div>\n  <div class="percentage"><span class="percentagexxx">0</span> v</div>\n  </div>\n  ';for(let a=0;a<e;a++){let e=document.createElement("div");e.setAttribute("id",`batteryCell${a}`),e.classList.add("cell"),e.innerHTML=t,document.querySelector("#batteryArray").appendChild(e)}a.cellSum=document.createElement("div"),a.cellSum.classList.add("cellSum"),a.appendChild(a.cellSum),a.cellSum.name=document.createElement("span"),a.cellSum.name.classList.add("cellSumName"),a.cellSum.name.innerHTML="cellSum:",a.cellSum.appendChild(a.cellSum.name),a.cellSum.value=document.createElement("span"),a.cellSum.value.classList.add("cellSumValue"),a.cellSum.appendChild(a.cellSum.value),a.divVoltage=document.createElement("div"),a.divVoltage.classList.add("voltage"),a.appendChild(a.divVoltage),a.divVoltage.name=document.createElement("span"),a.divVoltage.name.classList.add("voltageName"),a.divVoltage.name.innerHTML="Voltage:",a.divVoltage.appendChild(a.divVoltage.name),a.divVoltage.value=document.createElement("span"),a.divVoltage.value.classList.add("voltageValue"),a.divVoltage.appendChild(a.divVoltage.value),a.divVoltDiff=document.createElement("div"),a.divVoltDiff.classList.add("voltage"),a.appendChild(a.divVoltDiff),a.divVoltDiff.name=document.createElement("span"),a.divVoltDiff.name.classList.add("divVoltDiffName"),a.divVoltDiff.name.innerHTML="Voltage diff:",a.divVoltDiff.appendChild(a.divVoltDiff.name),a.divVoltDiff.value=document.createElement("span"),a.divVoltDiff.value.classList.add("divVoltDiffValue"),a.divVoltDiff.appendChild(a.divVoltDiff.value),a.divCurrent=document.createElement("div"),a.divCurrent.classList.add("current"),a.appendChild(a.divCurrent),a.divCurrent.name=document.createElement("span"),a.divCurrent.name.classList.add("currentName"),a.divCurrent.name.innerHTML="Current:",a.divCurrent.appendChild(a.divCurrent.name),a.divCurrent.value=document.createElement("span"),a.divCurrent.value.classList.add("currentValue"),a.divCurrent.appendChild(a.divCurrent.value),a.balanceCap=document.createElement("div"),a.balanceCap.classList.add("balanceCap"),a.appendChild(a.balanceCap),a.balanceCap.name=document.createElement("span"),a.balanceCap.name.classList.add("balanceCapName"),a.balanceCap.name.innerHTML="BalanceCapacity:",a.balanceCap.appendChild(a.balanceCap.name),a.balanceCap.value=document.createElement("span"),a.balanceCap.value.classList.add("balanceCapValue"),a.balanceCap.appendChild(a.balanceCap.value),a.rateCap=document.createElement("div"),a.rateCap.classList.add("rateCap"),a.appendChild(a.rateCap),a.rateCap.name=document.createElement("span"),a.rateCap.name.classList.add("rateCapName"),a.rateCap.name.innerHTML="RateCapacity:",a.rateCap.appendChild(a.rateCap.name),a.rateCap.value=document.createElement("span"),a.rateCap.value.classList.add("rateCapValue"),a.rateCap.appendChild(a.rateCap.value),a.chrgMosfet=document.createElement("div"),a.chrgMosfet.classList.add("chrgMosfet"),a.appendChild(a.chrgMosfet),a.chrgMosfet.name=document.createElement("span"),a.chrgMosfet.name.classList.add("chrgMosfetName"),a.chrgMosfet.name.innerHTML="Charging mosfet:",a.chrgMosfet.appendChild(a.chrgMosfet.name),a.chrgMosfet.value=document.createElement("input"),a.chrgMosfet.value.setAttribute("type","checkbox"),a.chrgMosfet.value.setAttribute("id","chrgMosfetValue"),a.chrgMosfet.value.classList.add("chrgMosfetValue"),a.chrgMosfet.appendChild(a.chrgMosfet.value),a.chrgMosfet.label=document.createElement("label"),a.chrgMosfet.label.setAttribute("for","chrgMosfetValue"),a.chrgMosfet.appendChild(a.chrgMosfet.label),a.dsChrgMosfet=document.createElement("div"),a.dsChrgMosfet.classList.add("dsChrgMosfet"),a.appendChild(a.dsChrgMosfet),a.dsChrgMosfet.name=document.createElement("span"),a.dsChrgMosfet.name.classList.add("dsChrgMosfetName"),a.dsChrgMosfet.name.innerHTML="Discharging mosfet:",a.dsChrgMosfet.appendChild(a.dsChrgMosfet.name),a.dsChrgMosfet.value=document.createElement("input"),a.dsChrgMosfet.value.setAttribute("type","checkbox"),a.dsChrgMosfet.value.setAttribute("id","dsChrgMosfetValue"),a.dsChrgMosfet.value.classList.add("dsChrgMosfetValue"),a.dsChrgMosfet.appendChild(a.dsChrgMosfet.value),a.dsChrgMosfet.label=document.createElement("label"),a.dsChrgMosfet.label.setAttribute("for","dsChrgMosfetValue"),a.dsChrgMosfet.appendChild(a.dsChrgMosfet.label),a.chrgMosfet.value&&clearEventListener(a.chrgMosfet.value),a.dsChrgMosfet.value&&clearEventListener(a.dsChrgMosfet.value),a.stateChrg=document.createElement("div"),a.stateChrg.classList.add("stateChrg"),a.appendChild(a.stateChrg),a.stateChrg.name=document.createElement("span"),a.stateChrg.name.classList.add("stateChrgName"),a.stateChrg.name.innerHTML="StateOfCharge:",a.stateChrg.appendChild(a.stateChrg.name),a.stateChrg.value=document.createElement("span"),a.stateChrg.value.classList.add("stateChrgValue"),a.stateChrg.appendChild(a.stateChrg.value),a.currentTime=document.createElement("div"),a.currentTime.classList.add("currentTime"),a.appendChild(a.currentTime),a.currentTime.name=document.createElement("span"),a.currentTime.name.classList.add("currentTimeName"),a.currentTime.name.innerHTML="CurrentTime:",a.currentTime.appendChild(a.currentTime.name),a.currentTime.value=document.createElement("span"),a.currentTime.value.classList.add("currentTimeValue"),a.currentTime.appendChild(a.currentTime.value);for(let e=0;e<3;e++){let a=document.createElement("span");a.setAttribute("id",`ntc${e}`),a.innerHTML="tmp",document.querySelector(".ntcsStats").appendChild(a)}return a}function clearEventListener(e){const a=e.cloneNode(!0);return e.replaceWith(a),a}
  )rawliteral";